'''
类的继承
我们定义了一个类之后，如果想要在这个类上进行扩展，或者引申出更多的对象类，那么就可以利用继承的方法。
被继承的类一般成为父类，继承的类成为子类。
值得注意的是:
如果子类中没有定义任何内容，那么只能继承父类的属性，而不能继承父类的方法。
或者说，在子类中能找到父类的方法，但是不能调用。

所以我们在定义一个子类的时候，一般需要重写父类中的属性和方法，以实现子类的独特性。
当父类中的属性或者方法在子类中被重写时，子类的实例化对象调用该属性或方法时，调用的是子类中的实现。
如果父类中还有属性或者方法没有被子类重写，那么子类的实例化对象仍然可以调用父类中的这些属性或方法。

下面这个例子，我们定义了一个Dad类，定义了Son类。并且把Dad类中的money属性和hti_son方法重写了。
但是父类中的gender和show()没有被重写。

'''
class Dad:
    money=10
    gender='Male'
    def __init__(self,name):
        print('爸爸')
        self.name=name
    def hit_son(self):
        print('%s 正在打儿子' %self.name)
    def show(self):
        print('父类要表现一下！')
class Son(Dad):
    money = 1000000000009
    def __init__(self,name,age):
        self.name=name
        self.age=age
    def hit_son(self):
        print('来自儿子类')

s1=Son('alex',18)
s1.hit_son()
print(s1.money)
s1.show()
print(s1.gender)
#Son.show()这样会出错。
'''这是运行结果
来自儿子类
1000000000009
父类要表现一下！
Male
'''

'''
1、当类之间有显著不同，并且较小的类是较大的类所需要的组件时，用组合比较好
2、当类之间有很多相同的功能，提取这些共同的功能做成父类或者基类，用继承来实现比较好。

'''